#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
print(section)
print(dim(section_abdomen_measurements['Image']))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
print(section)
print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
section_abdomen_measurements
all_abdomen_measurements <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/abdomen_coordinates.csv",
sep="\t", header=0)
head(all_abdomen_measurements)
scaled_hemocyte_coordinates <- list()
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
print(section)
print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
print(section)
#print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
scaled_hemocyte_coordinates <- list()
for(file in list.files(abdomen_measurements)){
section_abdomen_measurements <- read.table(file = paste0(abdomen_measurements,file),sep="\t",header=TRUE)
section_hemocyte_measurements <-  read.table(file = paste0(hemocyte_measurements,file),sep="\t",header=TRUE)
section_hemocyte_measurements["centroid_x_zeroscaled"] <- section_hemocyte_measurements["Centroid.X.µm"] - section_abdomen_measurements["Centroid.X.µm"][,1]
section_hemocyte_measurements["centroid_y_zeroscaled"] <- section_hemocyte_measurements["Centroid.Y.µm"] - section_abdomen_measurements["Centroid.Y.µm"][,1]
basename <- gsub(".txt","",file)
section_hemocyte_measurements["z_stack"] <- str_split(basename,"_")[[1]][2]
flyIDs <- append(flyIDs,str_split(basename,"_")[[1]][1])
scaled_hemocyte_coordinates[[basename]] <- section_hemocyte_measurements
}
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
print(section)
#print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
print(paste0(section,".tif"))
for(section in names(scaled_hemocyte_coordinates)){
print(paste0(section,".tif"))
#print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
image <- paste0(section,".tif")
area <- all_abdomen_measurements %>% filter(Image == image)
print(area)
#print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
head()
head(all_abdomen_measurements)
all_abdomen_measurements <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/abdomen_coordinates.csv",
sep="\t", header=TRUE)
for(section in names(scaled_hemocyte_coordinates)){
image <- paste0(section,".tif")
area <- all_abdomen_measurements %>% filter(Image == image)
print(area)
#print(dim(section_abdomen_measurements))
#section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
#all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
#spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
#                       y=all_zstacks_df$centroid_y_zeroscaled,
#                       xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
#                       yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
#scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
break
}
abdomen_coordinates <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/abdomen_coordinates.csv",
sep="\t", header=TRUE)
hemocyte_coordinates <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/he_coordinates.csv",
sep="\t", header=TRUE)
hemocyte_coordinates <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/hemocyte_coordinates.csv",
sep="\t", header=TRUE)
head(hemocyte_coordinates)
for(section in unique(hemocyte_coordinates["Image"])){
print(section)
}
?ppp
spatobj <- ppp(x=xcoords, y=ycoords)
for(section in unique(hemocyte_coordinates["Image"])){
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords,ycoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
}
for(section in unique(hemocyte_coordinates["Image"])){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords,ycoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
break
}
for(section in unique(hemocyte_coordinates["Image"])){
print(section)
break
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords,ycoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
}
unique(hemocyte_coordinates["Image"])
class(unique(hemocyte_coordinates["Image"]))
hemocyte_coordinates["Image"]
View(hemocyte_coordinates)
colnames(hemocyte_coordinates)
print(length(unique(hemocyte_coordinates['Image'])))
unique(hemocyte_coordinates['Image'])
length(unique(hemocyte_coordinates['Image']))
length(list(unique(hemocyte_coordinates['Image'])))
unique(hemocyte_coordinates['Image'])
list(unique(hemocyte_coordinates['Image']))
class(unique(hemocyte_coordinates['Image']))
class(unique(hemocyte_coordinates$Image))
unique(hemocyte_coordinates$Image)
for(section in unique(hemocyte_coordinates$Image)){
print(section)
break
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords,ycoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
}
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords,ycoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
}
print(xcoords)
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords)
#spatobj <- ppp(x=xcoords, y=ycoords)
}
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords)
spatobj <- ppp(x=xcoords, y=ycoords)
break
}
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords)
spatobj <- ppp(x=xcoords, y=ycoords, window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords))
))
break
}
head()
head(abdomen_coordinates)
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
print(xcoords)
spatobj <- ppp(x=xcoords, y=ycoords, window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords))))
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
print(area)
print(condition)
break
}
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords, window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords))))
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D <- list()
abdomen_areas_2D <- list()
experimental_condition <- list()
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords, window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords))))
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = factor(experimental_condition),
abdomen_area = abdomen_areas_2D)
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D))
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = factor(experimental_condition))
abdomen_areas_2D
values()
values(abdomen_areas_2D)
unname(unlist(abdomen_areas_2D))
factor(experimental_condition)
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = experimental_condition,
abdomen_area = abdomen_areas_2D)
head(scaled_hemocyte_coordinates_2D_hyperframe)
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=FALSE))
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = unname(unlist(experimental_condition)),
abdomen_area = unname(unlist(abdomen_areas_2D)))
head(scaled_hemocyte_coordinates_2D_hyperframe)
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=FALSE))
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=TRUE))
for(section in names(scaled_hemocyte_coordinates)){
section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
y=all_zstacks_df$centroid_y_zeroscaled,
xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
#break
}
scaled_hemocyte_coordinates_2D <- list()
scaled_hemocyte_coordinates_2D <- list()
for(section in names(scaled_hemocyte_coordinates)){
section_abdomen_area <- grep(fly, names(scaled_hemocyte_coordinates), value = TRUE)
all_zstacks_df <- bind_rows(scaled_hemocyte_coordinates[abdomen_section_IDS], .id = "Image")
spatstat_object <- ppp(x=all_zstacks_df$centroid_x_zeroscaled,
y=all_zstacks_df$centroid_y_zeroscaled,
xrange= c(min(all_zstacks_df$centroid_x_zeroscaled)-100,max(all_zstacks_df$centroid_x_zeroscaled)+100),
yrange= c(min(all_zstacks_df$centroid_y_zeroscaled)-100,max(all_zstacks_df$centroid_y_zeroscaled)+100))
#zrange= c(0,1000)
#plot.ppp(spatstat_object)
scaled_hemocyte_coordinates_2D[[section]] <- spatstat_object
#break
}
conditions <- append(rep("wellfed",137), rep("starved",138)) #Placeholder
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = factor(conditions))
scaled_hemocyte_coordinates_2D_hyperframe
dim(scaled_hemocyte_coordinates_2D_hyperframe)
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=TRUE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
plot(groupK)
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords,
#window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords)))
xrange = c(min(xcoords)-100,max(xcoords)+100),
yrange = c(min(ycoords)-100,max(ycoords)+100)
)
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
#experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D <- list()
abdomen_areas_2D <- list()
experimental_condition <- list()
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords,
#window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords)))
xrange = c(min(xcoords)-100,max(xcoords)+100),
yrange = c(min(ycoords)-100,max(ycoords)+100)
)
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
#experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = unname(unlist(experimental_condition)),
abdomen_area = unname(unlist(abdomen_areas_2D)))
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = factor(conditions))
head()
head(scaled_hemocyte_coordinates_2D_hyperframe)
scaled_hemocyte_coordinates_2D <- list()
abdomen_areas_2D <- list()
experimental_condition <- list()
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords,
#window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords)))
xrange = c(min(xcoords)-100,max(xcoords)+100),
yrange = c(min(ycoords)-100,max(ycoords)+100)
)
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = unname(unlist(experimental_condition)),
abdomen_area = unname(unlist(abdomen_areas_2D)))
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = factor(conditions))
head()
head(scaled_hemocyte_coordinates_2D_hyperframe)
scaled_hemocyte_coordinates_2D_hyperframe
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=TRUE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
scaled_hemocyte_coordinates_2D_hyperframe
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=FALSE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
library(tidyverse)
library(spatstat)
library(plotly)
library(stringr)
library(ggthemes)
setwd("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/code/")
inputdir <- file.path("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/analysis/")
##############################################################################
# Create ppp object for each abdomen section hemocyte coordinates
##############################################################################
abdomen_coordinates <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/abdomen_coordinates.csv",
sep="\t", header=TRUE)
hemocyte_coordinates <- read.table("/Users/sbandya/Desktop/hemocyte_recruitment_image_quantification/results/hemocyte_coordinates.csv",
sep="\t", header=TRUE)
scaled_hemocyte_coordinates_2D <- list()
abdomen_areas_2D <- list()
experimental_condition <- list()
for(section in unique(hemocyte_coordinates$Image)){
print(section)
xcoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_x_zeroscaled)
ycoords <- hemocyte_coordinates %>% filter(Image == section) %>% pull(centroid_y_zeroscaled)
spatobj <- ppp(x=xcoords, y=ycoords,
#window = owin(c(min(xcoords),max(xcoords)), c(min(ycoords),max(ycoords)))
xrange = c(min(xcoords)-100,max(xcoords)+100),
yrange = c(min(ycoords)-100,max(ycoords)+100)
)
scaled_hemocyte_coordinates_2D[[section]] <- spatobj
area <- abdomen_coordinates %>% filter(Image == section) %>% pull(Area.µm.2)
abdomen_areas_2D[[section]] <- area
condition <- abdomen_coordinates %>% filter(Image == section) %>% pull(condition)
experimental_condition[[section]] <- condition
}
scaled_hemocyte_coordinates_2D_hyperframe <- hyperframe(scaled_2D_coordinates = scaled_hemocyte_coordinates_2D,
samples = names(scaled_hemocyte_coordinates_2D),
experimental_condition = unname(unlist(experimental_condition)),
abdomen_area = unname(unlist(abdomen_areas_2D)))
scaled_hemocyte_coordinates_2D_hyperframe
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Gest(scaled_2D_coordinates, ratio=FALSE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
plot(groupK)
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Kest(scaled_2D_coordinates, ratio=FALSE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Fest(scaled_2D_coordinates, ratio=FALSE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
plot(groupK)
?plot
plot(groupK)
test_hemocytes <- studpermu.test(scaled_hemocyte_coordinates_2D_hyperframe, scaled_2D_coordinates ~ experimental_condition)
test_hemocytes
test_hemocytes <- studpermu.test(scaled_hemocyte_coordinates_2D_hyperframe, scaled_2D_coordinates ~ experimental_condition,
summaryfunction = Lest)
test_hemocytes
test_hemocytes <- studpermu.test(scaled_hemocyte_coordinates_2D_hyperframe, scaled_2D_coordinates ~ experimental_condition,
summaryfunction = Lest, use.Tbar = TRUE)
test_hemocytes
test_hemocytes <- studpermu.test(scaled_hemocyte_coordinates_2D_hyperframe, scaled_2D_coordinates ~ experimental_condition,
summaryfunction = Fest, use.Tbar = TRUE)
test_hemocytes <- studpermu.test(scaled_hemocyte_coordinates_2D_hyperframe, scaled_2D_coordinates ~ experimental_condition,
summaryfunction = Gest, use.Tbar = TRUE)
test_hemocytes
scaled_hemocyte_coordinates_2D_hyperframe$RipleyK <- with(scaled_hemocyte_coordinates_2D_hyperframe,
Gest(scaled_2D_coordinates, ratio=FALSE))
groupK <- anylapply(split(scaled_hemocyte_coordinates_2D_hyperframe$RipleyK,
scaled_hemocyte_coordinates_2D_hyperframe$experimental_condition), pool)
plot(groupK)
